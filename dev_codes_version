job('Moodle-dev-codes-version') {

    parameters {
     stringParam('COMMITMSG', 'Commit de test', 'Message pour commit.') 
     stringParam('BRANCH', 'UQAM_DEV_TEMP', 'Nom de la branche a creer.')
   }

    wrappers {
        credentialsBinding {
            usernamePassword('BB_USER', 'BB_PASS', 'uqamena-BB')
        }
    }

    multiscm {
      def baseBB = "https://bitbucket.org/uqam/"

      git {
            remote {
                url(baseBB + "local_uqamlib.git")
                credentials('uqamena-BB')
                branch('UQAM_30_MM-608')
            }
            extensions {
              cloneOptions {
                  shallow()
              }
              cleanAfterCheckout()
              relativeTargetDirectory('local/uqamlib')
            }
      }

      git {
            remote {
                url(baseBB + "local_codestests.git")
                credentials('uqamena-BB')
                branch('UQAM_30_MM-566')
            }
            extensions {
              cloneOptions {
                  shallow()
              }
              cleanAfterCheckout()
              relativeTargetDirectory('local/codestests')
            }
      }
    

      git {
            remote {
                url(baseBB + "local_codesexternes.git")
                credentials('uqamena-BB')
                branch('UQAM_30_MM-566')
            }
            extensions {
              cloneOptions {
                  shallow()
              }
              cleanAfterCheckout()
              relativeTargetDirectory('local/codesexternes')
            }
      }

      git {
            remote {
                url(baseBB + "local_uqinfosperso.git")
                credentials('uqamena-BB')
                branch('UQAM_30_MM-608-SHIB')
            }
            extensions {
              cloneOptions {
                  shallow()
              }
              cleanAfterCheckout()
              relativeTargetDirectory('local/uqinfosperso')
            }
      }

      git {
            remote {
                url(baseBB + "local_resetext.git")
                credentials('uqamena-BB')
                branch('UQAM_30_MM-575')
            }
            extensions {
              cloneOptions {
                  shallow()
              }
              cleanAfterCheckout()
              relativeTargetDirectory('local/resetext')
            }
      }
    

    }

    steps {
shell('''
# Verifier si la branche existe
CLONE_BRANCH=${BRANCH}
FIRST=`git ls-remote --heads https://\$BB_USER:\$BB_PASS@bitbucket.org/uqam/moodle.git ${BRANCH} | wc -l `
# Si la branche n'existe pas encore prendre autre
if [ "${FIRST}" -eq 0 ]
then
  CLONE_BRANCH='UQAM_30_INT'
fi
git clone --depth 1 --branch ${CLONE_BRANCH} --single-branch git@bitbucket.org:uqam/moodle.git \$WORKSPACE/moodle

       
#  uqamlib
rm -rf \$WORKSPACE/local/uqamlib.git;
rm -rf \$WORKSPACE/moodle/local/uqamlib
cp -r \$WORKSPACE/local/uqamlib  \$WORKSPACE/moodle/local/uqamlib
rm -rf \$WORKSPACE/local/uqamlib
#  codestests
rm -rf \$WORKSPACE/local/codestests.git
rm -rf \$WORKSPACE/moodle/local/codestests
cp -r \$WORKSPACE/local/codestests  \$WORKSPACE/moodle/local/codestests
rm -rf \$WORKSPACE/local/codestests
# codesexternes
rm -rf \$WORKSPACE/local/codesexternes.git
rm -rf \$WORKSPACE/moodle/local/codesexternes
cp -r \$WORKSPACE/local/codesexternes  \$WORKSPACE/moodle/local/codesexternes
rm -rf \$WORKSPACE/local/codesexternes
# uqinfosperso 
rm -rf \$WORKSPACE/local/uqinfosperso.git
rm -rf \$WORKSPACE/moodle/local/uqinfosperso
cp -r \$WORKSPACE/local/uqinfosperso  \$WORKSPACE/moodle/local/uqinfosperso
rm -rf \$WORKSPACE/local/uqinfosperso

# resetext 
rm -rf \$WORKSPACE/local/resetext.git
rm -rf \$WORKSPACE/moodle/local/resetext
cp -r \$WORKSPACE/local/resetext  \$WORKSPACE/moodle/local/resetext
rm -rf \$WORKSPACE/local/resetext

# Committer
cd \$WORKSPACE/moodle
git add local/uqamlib local/codestests local/codesexternes local/resetext local/uqinfosperso
git commit -m "${COMMITMSG}"

if [ "${CLONE_BRANCH}"  != "${BRANCH}" ]
then
    git checkout -b ${BRANCH}
fi
git push bb ${BRANCH}:${BRANCH}
''')
    }
}